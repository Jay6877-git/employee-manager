name: release

on:
  push:
    tags:
      - 'v*'   # e.g., v0.1.2

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Extract version from tag
        id: vars
        run: echo "version=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      - name: Set project version to tag
        run: mvn -B versions:set -DnewVersion='${{ steps.vars.outputs.version }}' -DgenerateBackupPoms=false

      - name: Build shaded JAR + Javadoc
        run: |
          # Build executable fat JAR (using your release profile) and generate Javadoc + javadoc.jar
          mvn -B -P release -DskipTests=false package javadoc:javadoc javadoc:jar

      - name: Compute checksums
        run: |
          cd target
          for f in *.jar; do sha256sum "$f" > "$f.sha256"; done

      - name: Zip Javadoc (if present)
        if: ${{ hashFiles('target/site/apidocs/**/*') != '' }}
        run: |
          (cd target/site && zip -r apidocs.zip apidocs)

      - name: Generate simple release notes
        run: |
          set -e
          PREV=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || true)
          if [ -n "$PREV" ]; then RANGE="$PREV..HEAD"; else RANGE="$(git rev-list --max-parents=0 HEAD)..HEAD"; fi
          git log --pretty=format:'- %s (%h)' $RANGE > RELEASE_NOTES.md || echo "- Initial release" > RELEASE_NOTES.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: v${{ steps.vars.outputs.version }}
          body_path: RELEASE_NOTES.md
          files: |
            target/*.jar
            target/*.jar.sha256
            target/site/apidocs.zip

      # ---- GitHub Pages publish (safe even if no docs) ----
      - name: Stage Javadoc for Pages
        run: |
          rm -rf gh-pages
          mkdir -p gh-pages
          if [ -d target/site/apidocs ]; then
            mkdir -p gh-pages/docs/${{ steps.vars.outputs.version }} gh-pages/latest
            cp -r target/site/apidocs/* gh-pages/docs/${{ steps.vars.outputs.version }}/
            cp -r target/site/apidocs/* gh-pages/latest/
          else
            echo "<!doctype html><h1>No Javadoc for v${{ steps.vars.outputs.version }}</h1>" > gh-pages/index.html
          fi

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages
          commit_message: "docs: publish Javadoc for v${{ steps.vars.outputs.version }}"
